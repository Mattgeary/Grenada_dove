marks <- scan()
hist(marks)
hist(marks, breask = 10)
hist(marks, breaks = 10)
dev.off()
hist(marks, breaks = 10)
plot(marks)
load("C:/Users/mgeary/Dropbox/Teaching/MSc/Biodiversity Informatics/Workbooks/Lecture_5_Population_models/BK.pop.RData")
BK.pop
length(BK.pop)
mean(BK.pop[4:19])
x <- c(1,2,3)
print(x)
print(x)
print(x
)
print(x
x + 1
A<-matrix(c(0,0,0.375, 0.92,0,0,0,0.97,0.96),nrow=3,byrow=TRUE)
print(A)
N0<-matrix(c(0,0,64),ncol=1) #64 in the intensive founders
print(N0)
N1<-A%*%N0
print(N1) #Number of adults and Juviniles in time step 1
years<-12
N.projections<-matrix(0,nrow=nrow(A),ncol=years+1)
N.projections[,1]<-N0
for(i in 1:years){
N.projections[,i+1]<-A%*%N.projections[,i]
}
print(N.projections)
matplot(0:years,t(N.projections),type="l",lty=1:3,col=1,ylab="Stage Abundance",xlab="Years")
legend("topleft",legend=c("Juviniles","SubAdults","Adults"),lty=1:3,col=1,bty="n")
eigs.A<-eigen(A)
print(eigs.A)
dom.pos<-which.max(eigs.A[["values"]])
L1<-Re(eigs.A[["values"]][dom.pos])
print(L1)
w<-Re(eigs.A[["vectors"]][,dom.pos])
M<-eigen(t(A))
v<-Re(M$vectors[,which.max(Re(M$values))])
RV<-v/v[1]
print(RV)
vw.s<-v%*%t(w)
S<-vw.s/as.numeric(v%*%w)
S<-round(S,3)
print(S)
elas<-A/L1*S
elas<-round(elas,3)
print(elas)
A<-matrix(c(0,0,0.125, 0.8,0,0,0,0.55,0.55),nrow=3,byrow=TRUE)
print(A)
N0<-matrix(c(0,0,37),ncol=1) #147 founders
print(N0)
N1<-A%*%N0
print(N1) #Number of adults and Juviniles in time step 1
years<-12
N.projections<-matrix(0,nrow=nrow(A),ncol=years+1)
N.projections[,1]<-N0
for(i in 1:years){
N.projections[,i+1]<-A%*%N.projections[,i]
}
print(N.projections)
matplot(0:years,t(N.projections),type="l",lty=1:3,col=1,ylab="Stage Abundance",xlab="Years")
legend("topright",legend=c("Juviniles","SubAdults","Adults"),lty=1:3,col=1,bty="n")
eigs.A<-eigen(A)
print(eigs.A)
dom.pos<-which.max(eigs.A[["values"]])
L1<-Re(eigs.A[["values"]][dom.pos])
print(L1)
w<-Re(eigs.A[["vectors"]][,dom.pos])
M<-eigen(t(A))
v<-Re(M$vectors[,which.max(Re(M$values))])
RV<-v/v[1]
print(RV)
vw.s<-v%*%t(w)
S<-vw.s/as.numeric(v%*%w)
S<-round(S,3)
print(S)
elas<-A/L1*S
elas<-round(elas,3)
print(elas)
A<-matrix(c(0,0.0077,0.125, 0.8,0,0,0,0.55,0.45),nrow=3,byrow=TRUE)
print(A)
N0<-matrix(c(0,0,37),ncol=1)
print(N0)
N1<-A%*%N0
print(N1) #Number of adults and Juviniles in time step 1
years<-5
N.projections<-matrix(0,nrow=nrow(A),ncol=years+1)
N.projections[,1]<-N0
for(i in 1:years){
N.projections[,i+1]<-A%*%N.projections[,i]
}
print(N.projections)
matplot(0:years,t(N.projections),type="l",lty=1:3,col=1,ylab="Stage Abundance",xlab="Years")
legend("topright",legend=c("Juviniles","SubAdults","Adults"),lty=1:3,col=1,bty="n")
eigs.A<-eigen(A)
print(eigs.A)
dom.pos<-which.max(eigs.A[["values"]])
L1<-Re(eigs.A[["values"]][dom.pos])
print(L1)
w<-Re(eigs.A[["vectors"]][,dom.pos])
M<-eigen(t(A))
v<-Re(M$vectors[,which.max(Re(M$values))])
RV<-v/v[1]
print(RV)
vw.s<-v%*%t(w)
S<-vw.s/as.numeric(v%*%w)
S<-round(S,3)
print(S)
elas<-A/L1*S
elas<-round(elas,3)
print(elas)
A<-matrix(c(0,0.0077,0.125, 0.92,0,0,0,0.97,0.86),nrow=3,byrow=TRUE)
print(A)
N0<-matrix(c(0,0,64),ncol=1)
print(N0)
N1<-A%*%N0
print(N1) #Number of adults and Juviniles in time step 1
years<-5
N.projections<-matrix(0,nrow=nrow(A),ncol=years+1)
N.projections[,1]<-N0
for(i in 1:years){
N.projections[,i+1]<-A%*%N.projections[,i]
}
print(N.projections)
matplot(0:years,t(N.projections),type="l",lty=1:3,col=1,ylab="Stage Abundance",xlab="Years")
legend("topright",legend=c("Juviniles","SubAdults","Adults"),lty=1:3,col=1,bty="n")
eigs.A<-eigen(A)
print(eigs.A)
dom.pos<-which.max(eigs.A[["values"]])
L1<-Re(eigs.A[["values"]][dom.pos])
print(L1)
w<-Re(eigs.A[["vectors"]][,dom.pos])
M<-eigen(t(A))
v<-Re(M$vectors[,which.max(Re(M$values))])
RV<-v/v[1]
print(RV)
vw.s<-v%*%t(w)
S<-vw.s/as.numeric(v%*%w)
S<-round(S,3)
print(S)
elas<-A/L1*S
elas<-round(elas,3)
print(elas)
N0 <- c(64,64)  #Values changed for the different graphs
t <- 0:5
lambdas <- c(1.194529, 0.9775937) )  #Values changed for the different graphs
NPop1 <- N0[1]*lambdas[1]^t
NPop2 <- N0[2]*lambdas[2]^t
N.all <- matrix(c(NPop1,NPop2),ncol=2,byrow=F)
matplot(t, N.all, type = "l", col = c("red", "blue"),
lwd = 2, xlab = "Years", ylab = "Population size")
legend("topleft",legend=c("Healthy Ark","Diseased Ark"),lty=1,col = c("red", "blue")) )
lambdas <- c(1.194529, 0.9775937)  #Values changed for the different graphs
NPop1 <- N0[1]*lambdas[1]^t
NPop2 <- N0[2]*lambdas[2]^t
N.all <- matrix(c(NPop1,NPop2),ncol=2,byrow=F)
matplot(t, N.all, type = "l", col = c("red", "blue"),
lwd = 2, xlab = "Years", ylab = "Population size")
legend("topleft",legend=c("Healthy Ark","Diseased Ark"),lty=1,col = c("red", "blue")) )
matplot(t, N.all, type = "l", col = c("red", "blue"),
lwd = 2, xlab = "Years", ylab = "Population size")
legend("topleft",legend=c("Healthy Ark","Diseased Ark"),lty=1,col = c("red", "blue"))
W<-matrix(c(0,0,0,0,0.55,0.65,0,0,0,0,0,0.75,0,0,0,0,0,0.75,0,0,0,0,0,0.75,0.75),nrow=5, byrow=TRUE)
print(W)
eigs.W<-eigen(W)
print(eigs.W)
dom.pos<-which.max(eigs.W[["values"]])
L1<-Re(eigs.W[["values"]][dom.pos])
print(L1)
A<-Re(eigs.W[["vectors"]][,dom.pos])
ssd<-round(A/sum(A),3)
print(ssd)
#turn into %
M<-eigen(t(W))
v<-Re(M$vectors[,which.max(Re(M$values))])
RV<-v/v[1]
print(RV)
vw.s<-v%*%t(A)
S<-vw.s/as.numeric(v%*%A)
print(S)
elas<-W/L1*S
elas<-round(elas,3)
print(elas)
N <-c(54,75,94,56,40,38,38,34,34)
year<-2005:2013
plot(year,N,xlab="Year",ylab="{Population of Northern Yellowstone")
plot(year,N,xlab="Year",ylab="Population of Northern Yellowstone",type="b")
M<-c(64,61,77,68,46,59,49,49,61)
year<-2005:2013
plot(year,M,xlab="Year",ylab="Population of Non-Northern Yellowstone")
plot(year,M,xlab="Year",ylab="Population of Non-Northern Yellowstone",type="b")
rates<-N[2:9]/N[1:8]
print(rates)
#northern growth rate 05>06 07>08....1.38 1.25 0.59 0.71 0.95 1 0.89 1
rates<-M[2:9]/M[1:8]
print(rates)
#non northern growth rates 0.95 1.26 0.88 0.67 1.28 0.83 1 1.24
N0<-95
lamda<-0.94
t<-75
Nt<-N0*lamda^t
print(Nt)
#94years (2090) from initial release the population will be extinct at this growth rate as loosing one wold from current population per year.
N0<-c(31,53,86,112,118,119,134,148,174,171,118,136,171,124,86,97,87,83,95)
lambda<-0.94
t<-0:94
Nt.s<-sapply(N0,function(n)n*lambda^t)
print(Nt.s)
rates<-N0[2:19]/N0[1:18]
print(rates)
# growth rates for 19 years. find mean.
mean(1:19)
#mean=1.04
N1<-34
lambda<-0.971
t<-50
Nt<-N1*lambda^t
print(Nt)
N2<-61
lambda<-1.35
t<-50
Nt<-N2*lambda^t
print(Nt)
elas
data(iris)
iris
cor.test(Sepal.Width, Sepal.Lenght, method = "spearman")
cor.test(iris$Sepal.Width, iris$Sepal.Lenght, method = "spearman")
cor.test(iris$Sepal.Width, iris$Sepal.Length, method = "spearman")
install.packages("devtools")
library(devtools)
install.packages("Rtools")
library(devtools)
library('devtools')
library('dismo')
update.packages(checkbuilt = TRUE)
update.packages(checkbuilt = TRUE)
setInternet2()
update.packages(checkbuilt = TRUE)
update.packages(checkBuilt = TRUE)
update.packages(checkBuilt = TRUE)
y
library('devtools')
install_github("ggplot2")
install_github("ggplot2", username = mgeary)
install_github("ggplot2", username = mattgeary)
?install_github
install_github("hdavharris/mistnet")
install_github("davharris/mistnet")
install.packages('geiger')
install_github("davharris/mistnet")
install_github("wch/ggplot2")
library(mistnet)
vignette('mistnet')
?vignette
?icount
library(raster)
setwd("C:/Users/mgeary/Dropbox/Research/Grenada Dove/Dummy model/Climate")
clim <- raster("current.grd")
plot(clim)
clim
image(clim)
setwd("C:/Users/mgeary/Dropbox/Research/Grenada Dove/Dummy model")
clim <- raster("cu.grd")
ppt.aug <- raster("GRD_ppt_aug.asc")
plot(ppt.aug)
source("GD_dummy_model.R", eacho = TRUE)
source("GD_dummy_model.R", echo = TRUE)
setwd("C:/Users/mgeary/Dropbox/Research/Grenada Dove/Dummy model")
source("GD_dummy_model.R", echo = TRUE)
source('C:/Users/mgeary/Dropbox/Research/Grenada Dove/Dummy model/GD_dummy model.R')
future()
future(dove.avg)
plot(dove)
plot(test.dove)
head(dove)
plot(dove$x, dove$y)
