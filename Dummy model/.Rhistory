install.packages("twitteR")
library('twitteR')
vignette('twitteR')
cranTweets <- userTimeline(
'
cranatic
'
)
cred <- OAuthFactory$new(consumerKey=   AuTTqMy9RBRsAMK9OqDDg,
+ consumerSecret=0x7Ua83W7PAYlNlpZWyk1V7DX6rjFU5Uv9k3I72qfU,
+ requestURL=https://api.twitter.com/oauth/request_token,
+ accessURL=https://api.twitter.com/oauth/access_token,
+ authURL=https://api.twitter.com/oauth/authorize)
cred <- OAuthFactory$new(consumerKey=   AuTTqMy9RBRsAMK9OqDDg,consumerSecret=0x7Ua83W7PAYlNlpZWyk1V7DX6rjFU5Uv9k3I72qfU, requestURL=https://api.twitter.com/oauth/request_token, accessURL=https://api.twitter.com/oauth/access_token, authURL=https://api.twitter.com/oauth/authorize)
cred <- OAuthFactory$new(consumerKey="AuTTqMy9RBRsAMK9OqDDg", consumerSecret=0x7Ua83W7PAYlNlpZWyk1V7DX6rjFU5Uv9k3I72qfU, requestURL=https://api.twitter.com/oauth/request_token, accessURL=https://api.twitter.com/oauth/access_token, authURL=https://api.twitter.com/oauth/authorize)
cred <- OAuthFactory$new(consumerKey="AuTTqMy9RBRsAMK9OqDDg", consumerSecret="0x7Ua83W7PAYlNlpZWyk1V7DX6rjFU5Uv9k3I72qfU", requestURL="https://api.twitter.com/oauth/request_token", accessURL="https://api.twitter.com/oauth/access_token", authURL="https://api.twitter.com/oauth/authorize")
cred$handshake()
install.packages("knitr")
?rnorm
x <- rnorm(50, 3)
plot(x)
hist(x)
hist(x, breaks=20)
?rnorm
x <- rnorm(500, 50, 3)
hist(x)
hist(x, breaks=15)
hist(x, breaks=10)
hist(x, xlab = "Data", ylab="Frequency")
hist(x, xlab = "Data", ylab="Frequency", bty=T)
hist(x, xlab = "Data", ylab="Frequency", bty="o")
hist(x, xlab = "Data", ylab="Frequency", bty="l")
plot(x, bty="l")
plot(x, bty="o")
plot(x, bty="u")
hist(x, xlab = "Data", ylab="Frequency")
hist(x, xlab = "Data", ylab="Frequency", xlim=c(0, 60))
hist(x, xlab = "Data", ylab="Frequency", xlim=c(042, 60))
hist(x, xlab = "Data", ylab="Frequency", xlim=c(40, 60))
x <- rpois(500, 50, 3)
x <- rpois(500, 50)
hist(x, xlab = "Data", ylab="Frequency"
)
?rpois
x <- rpois(500)
?nbiom
?nbinom
mu <- exp(beta0 + beta1 * x)
x <- runif(n=n, min=0, max=1.5)
n <- 500
x <- runif(n=n, min=0, max=1.5)
mu <- exp(1 + 0.2 * x)
y <- rpois(n=n, lambda=mu)
plot(y)
hist(y)
x M- y
x ,- y
x <- y
hist(x, xlab = "Data", ylab="Frequency"
)
##Two species in a Beverton-Holt competition model on a 2-d landscape
##################
###Parameters
years=15
scape=100
#species GR
Sp1=50
Sp2=40
#landscape
sp1_land<-array(runif(scape*scape,70,90),c(scape,scape,(years+1)))
sp2_land<-array(runif(scape*scape,70,90),c(scape,scape,(years+1)))
y1<-matrix(c(rep(c(rep(0.4,40),rep(0.70,20),c(rep(0.4,40))),40),rep(0.7,20*scape),rep(c(rep(0.4,40),rep(0.7,20),c(rep(0.4,40))),40)),ncol=scape,nrow=scape)
y2<-1-y1
res<-matrix((sp2_land[,,1]-sp1_land[,,1]),scape,scape)
###Functions
colrs<-colorRampPalette(sample(c("darkred","green3"),2,replace=FALSE))
bevertonholt2sp<-function(years,scape,sp1_land,sp2_land,res){
for(i in 1:years){
for(j in 1:scape){
for(k in 1:scape){
N1<-sp1_land[j,k,i]
N2<-sp2_land[j,k,i]
#growth rates
dN1<-N1*rnorm(1,Sp1,0.015)/(1+(y1[j,k]*N2+N1))
dN2<-N2*rnorm(1,Sp2,0.015)/(1+(y2[j,k]*N1+N2))
#update pop sizes
sp1_land[j,k,i+1]<-N1+dN1
sp2_land[j,k,i+1]<-N2+dN2
#pop size differences
res[j,k]<-(sp2_land[j,k,i+1]-sp1_land[j,k,i+1])
}
}
image(res,col=colrs(6),xaxt="n",yaxt="n",add=TRUE)
}
}
par(bg="wheat1",bty="n",pty="m",ps=15)
image(res,col=colrs(6),xaxt="n",yaxt="n",lty="blank")
bevertonholt2sp(years,scape,sp1_land,sp2_land,res)
polygon(x=c(0.04,0.15,0.37,0.36,0.25,0.04),y=c(0.75,0.98,0.85,0.68,0.61,0.75),col="oldlace",border="darkgrey")
lines(x=c(0.36,0.4),y=c(0.68,0.6),lwd=0.75,col="brown3")
text(x=0.21,y=0.8,"Happy\n Holidays\n from the\n EEB & Flow",cex=1,col=colrs(6)[6],font=4,srt=-30)
dig.files <- list.files(getwd(), recursive=TRUE, include.dirs=FALSE)
dig.files
help(biomod2, help_type="html")
install.packages("biomod2")
library(biomod2)
help(biomod2, help_type="html")
?getData#
?getData
library(raster)
library(dismo)
?getData
GRD <- getData('GADM', country='GRD', level=0)
alt <- getData('alt', country='GRD', mask=TRUE)
prec <- getData('worldclim', var='prec', res=10)
prec <- crop(prec, extent(GRD))
tmean <- getData('worldclim', var='tmean', res=10)
tmean <- crop(tmean, extent(GRD))
bio <- getData('worldclim', var='bio', res=10)
bio <- crop(mdr, extent(GRD))
bio <- crop(bio, extent(GRD))
plot(GRD)
plot(alt, add=T)
plot(pred, add=T)
plot(prec, add=T)
plot(bio, add=T)
plot(bio)
prec <- getData('worldclim', var='prec', res=2.5)
prec <- crop(prec, extent(GRD))
plot(prec)
plot(alt)
plot(GRD, add=T)
library dismo
library(dismo)
?getData
tri <- getData('GADM', country='TTO', level=0)
plot(tri)
temp <- getdata('worldclim', var='tmean', res=0.5, lon = 61.5167, lat= 10.6667)
temp <- getData('worldclim', var='tmean', res=0.5, lon = 61.5167, lat= 10.6667)
plot temp
plot(temp)
temp <- getdata('worldclim', var='tmean', res=0.5, lon = -61.5167, lat= 10.6667)
temp <- getData('worldclim', var='tmean', res=0.5, lon = -61.5167, lat= 10.6667)
temp <- mean(temp)
plot(temp)
temp <- crop(temp, extent(tri))
plot(temp)
prec <- getData('worldclim', var='prec', res=0.5, lon = -61.5167, lat= 10.6667)
prec <- mean(prec)
prec <- crop(prec, extent(tri))
plot(prec)
devtools::install_github("ropensci/spocc")
library(spocc)
results <- occ(query = 'Leptotila wellsi', from = 'gbif')
results
results$gbif
dove <- results$gbif$data$Leptotila_wellsi
head(dove)
dove <- dove[is.na(dove$longitude),]
dove
dove <- results$gbif$data$Leptotila_wellsi
dove <- dove[-is.na(dove$longitude),]
dove
dove <- dove[-c(is.na(dove$longitude)),]
dove
dove <- dove[-which(dove$longitude == NA),]
dove
dove <- results$gbif$data$Leptotila_wellsi
dove
dove <- complete.cases(dove)
dove
dove <- results$gbif$data$Leptotila_wellsi
dove <- dove[complete.cases(dove),]
dove
points(dove$latitude, dove$longitude)
points(dove$longitude, dove$latitude)
plot(dove$longitude, dove$latitude)
plot(tri)
points(dove$longitude, dove$latitude)
library('dismo')
setInternet2()
grd <- getData('gdm', country='GRD', level=0)
?getData
grd <- getData('GADM', country='GRD', level=0)
plot(grd)
library('rgeos')
cent <- gCentroid(grd,byid=TRUE)
cent
points(cent)
grd
BK <- read.csv("http://dl.dropbox.com/u/23032828/BK_Years.csv", row.names=1)
head(BK)
years <- seq(1990, 2008)
BK.pop <- apply(BK.y, 2, sum, na.rm=T)
plot(BK.pop ~ years, xlab="Year", ylab="Number of displaying\nmale black grouse", las=1, type="b")
years <- seq(1990, 2008)
BK.pop <- apply(BK, 2, sum, na.rm=T)
plot(BK.pop ~ years, xlab="Year", ylab="Number of displaying\nmale black grouse", las=1, type="b")
BK.pop
BK <- BK.pop[,3:11]
BK <- BK.pop[3:11]
BK
years <- 1992:2000
plot(BK, years)
plot(BK ~ years)
mod.1 <- lm(BK ~ years)
mod.1
plot(mod.1)
mod.2 <- lm(log(BK) ~ years)
plot(mod.2)
library(vegan)
install.packages("vegan")
library(vegan)
data()
?data
data(package="vegan")
data(sipoo)
head(sipoo)
summary(skipoo)
summary(sipoo)
head(sipoo)
install.packages("mefa")
library(mefa)
data(package="mefa")
data(dol.count)
head(dol.count)
example(dol.count)
install.packages("BiodiversityR")
library('biodiversityR')
library('BiodiversityR')
library('BiodiversityR')
data(package = 'BiodiversityR')
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_high_60_bio")
library(raster)
season <- raster(bc60bi517.tif)
season <- raster("bc60bi517.tif")
season <- raster("bc60bi5017.tif")
plot(season)
temp.range <- raster("bc60bi507.tif")
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_high_60_ppt")
ppt.jan <- raster("bc60pr501.tif")
ppt.aug <- raster("bc60pr508.tif")
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_high_60_tmin")
tmin.aug <- raster("bc60tn508.tif")
tmin.jan <- raster("bc60tn501.tif")
high_60 <- stack(tmin.jan, season, ppt.aug, tmin.aug, fire)
fire <- (tmin.aug/1000) * 4
high_60 <- stack(tmin.jan, season, ppt.aug, tmin.aug, fire)
setwd("C:/Users/Mgeary/Dropbox/Research/Grenada Dove/Dummy model")
GRD <- getData('GADM', country='GRD', level=0)
# Restrict to island of Grenada
GRD <- SpatialPolygons(list(Polygons(list(GRD@polygons[[1]]@Polygons[[8]]), ID="1")))
high_60 <- crop(high_60, extent(GRD))
plot(high_60)
names(high_60) <- c("tmin.jan", "ppt.season", "ppt.aug", "tmin.aug", "fire")
plot(high_60)
setwd("C:/Users/Mgeary/Dropbox/Research/Grenada Dove/Dummy model/Future")
?write.raster
?write.Raster
?writeRaster
writeRaster(high_60, "high_60.grd")
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_low_26_bio")
season <- raster("bc26bi517.tif")
season <- raster("bc26bi5017.tif")
temp.range <- raster("bc26bi507.tif")
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_low_26_ppt")
ppt.jan <- raster("bc26pr501.tif")
ppt.aug <- raster("bc26pr508.tif")
setwd("C:/Users/Mgeary/Desktop/Future climate data/BCC_low_26_tmin")
tmin.aug <- raster("bc26tn508.tif")
tmin.jan <- raster("bc26tn501.tif")
low_26 <- stack(tmin.jan, season, ppt.aug, tmin.aug, fire)
low_26 <- crop(low_26, extent(GRD))
names(low_26) <- c("tmin.jan", "ppt.season", "ppt.aug", "tmin.aug", "fire")
plot(low_26)
rm(fire)
rm(high_60)
rm(low_26)
rm(ppt.aug)
rm(ppt.jan)
rm(season)
rm(temp.range)
rm(tmin.aug)
rm(tmin.jan)
setwd("C:/Users/Mgeary/Desktop/Future climate data")
setwd("C:/Users/Mgeary/Dropbox/Research/Grenada Dove/Dummy model")
#ppt <- getData('worldclim', var='prec', res=0.5, lat = 12.05, lon = -61.75)
#ppt <- crop(ppt, extent(GRD))
#ppt.jan <- subset(ppt, 1)
#ppt.aug <- subset(ppt, 2)
ppt.jan <- raster('GRD_ppt_jan.asc')
ppt.aug <- raster('GRD_ppt_aug.asc')
# Temperature
#tmin <- getData('worldclim', var='tmin', res=0.5, lat = 12.05, lon = -61.75)
#tmin <- crop(tmin, extent(GRD))
tmin.jan <- raster('GRD_tmin_jan.asc')
tmin.aug <- raster('GRD_tmin_aug.asc')
# BIOCLIM variables
#BIO <- getData('worldclim', var='bio', res=0.5, lat = 12.05, lon = -61.75)
#BIO <- crop(BIO, extent(GRD))
#ppt.season <- subset(BIO, 15)
#temp.range <- subset(BIO, 7)
ppt.season <- raster('GRD_ppt_season.asc')
temp.range <- raster('GRD_temp_range.asc')
### Create FAKE fire risk raster
fire <- (tmin.aug/1000) * 4
?if
)
current <- stack(tmin.jan, ppt.season, ppt.aug, tmin.aug, fire)
plot(current)
names(current) <- c("tmin.jan", "ppt.season", "ppt.aug", "tmin.aug", "fire")
writeRaster(high_60, "\Climate\high_60.grd")
writeRaster(high_60, "/Climate/high_60.grd")
writeRaster(current, "/Climate/current.grd")
writeRaster(current, "Climate/current.grd")
current <- raster("Climate/current.grd")
plot(current)
current <- stack("Climate/current.grd")
plot(current)
pred.area <- list(c(reps, threshold, current.area)
)
reps <- 10
threshold = 0.7
current.area = 0.3
pred.area <- list(c(reps, threshold, current.area))
pred.area
current = TRUE
if(climate == TRUE) append(pred.area, climate <- data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)))
climate = TRUE
if(climate == TRUE) append(pred.area, climate <- data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)))
?list
climate
climate = TRUE
pred.area <- list(c(reps = reps, threshold = threshold, pred.area = current.area)
if(climate == TRUE) append(pred.area, climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)))
pred.area <- list(c(reps = reps, threshold = threshold, pred.area = current.area)
)
pred.area
if(climate == TRUE) append(pred.area, climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)))
climate = TRUE
if(climate == TRUE) append(pred.area, climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)))
if(climate == TRUE) future.climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps)); append(pred.area, future.climate)
pred.area
?append
if(climate == TRUE) pred.area$future.climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps))
pred.area
pred.area[[2]]
pred.area[[3]]
rm(pred.area)
pred.area <- list(c(reps = reps, threshold = threshold, pred.area = current.area)
)
pred.area
if(climate == TRUE) pred.area$future.climate = data.frame(low_26 = numeric(reps), med_45 = numeric(reps), high_60 = numeric(reps), max_85 = numeric(reps))
pred.area
pred.area[[2]]
pred.area$future.climate$low_26
pred.area$future.climate$low_26[5] <- 100
pred.area$future.climate$low_26
pred.area
